#setting dataframe
df1 <- read.csv("hanwoo1.txt")
View(df1)
#setting dataframe
df <- read.csv("hanwoo2.txt")
df_train <- df_norm[1:8000,]
df_test <- df_norm[8001:10921,]
df_train <- df[1:8000,]
df_test <- df[8001:10921,]
#SVM
# begin by training a simple linear SVM
library(kernlab)
View(df_train)
#SVM
# begin by training a simple linear SVM
library(kernlab)
grade_classifier <- ksvm(gradeNm ~ 등지방 + 등심단면적 + 도체중 + 육량지수 + 근내지방 + month, data = df_train,
kernel = "vanilladot")
# look at basic information about the model
grade_classifier
## Step 4: Evaluating model performance ----
# predictions on testing dataset
grade_predictions <- predict(grade_classifier, df_test)
head(letter_predictions)
## Step 4: Evaluating model performance ----
# predictions on testing dataset
grade_predictions <- predict(grade_classifier, df_test)
head(grade_predictions)
table(grade_predictions, letters_test$letter)
table(grade_predictions, grade_test$gradeNm)
## Step 4: Evaluating model performance ----
# predictions on testing dataset
grade_predictions <- predict(grade_classifier, df_test)
head(grade_predictions)
table(grade_predictions, df_test$gradeNm)
# look only at agreement vs. non-agreement
# construct a vector of TRUE/FALSE indicating correct/incorrect predictions
agreement <- grade_predictions == df_test$gradeNm
table(agreement)
prop.table(table(agreement))
grade_classifier_rbf <- ksvm(gradeNm ~ 등지방 + 등심단면적 + 도체중 + 육량지수 + 근내지방 + month, data = df_train,
kernel = "rbfdot")
grade_predictions_rbf <- predict(grade_classifier_rbf, df_test)
agreement_rbf <- grade_predictions_rbf == df_test$gradeNm
table(agreement_rbf)
prop.table(table(agreement_rbf))
View(df1)
lm(gradeNm ~ 등지방 + 등심단면적 + 도체중 + 육량지수 + 근내지방 + month, data = df_train)
lm(gradeNm ~ 등지방 + 등심단면적 + 도체중 + 육량지수 + 근내지방 + month, data = df_train) %>% summary
library(tidyverse)
lm(gradeNm ~ 등지방 + 등심단면적 + 도체중 + 육량지수 + 근내지방 + month, data = df_train) %>% summary
library(RWeka)
library(neuralnet)
