pacman::p_load("tidyverse","class","gmodels")
df <- read.csv("hanwoo2.txt",fileEncoding = "EUC-KR")
df <- filter(df, is.na(windex)==FALSE)
View(df)
str(df)
df1 <- df[,c(1:9,14,15,11)]
df1$SexNm <- ifelse(df1$SexNm=="거세",1,0) #dummy coding
str(df1)
table(df1$gradeNm)
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
df_norm <- as.data.frame(lapply(df1[,1:10], normalize))
df_norm$SexNm <- df1$SexNm
summary(df_norm$month)
df_train <- df_norm[1:8000,]
df_test <- df_norm[8001:10920,]
View(df_train)
df_train_labels <- df1[1:8000,11]
df_test_labels <- df1[8001:10920,11]
df_test_pred <- knn(train = df_train, test = df_test, cl = df_train_labels, k = 3)
df_test_labels
df_test_pred
CrossTable(x = df_test_labels, y = df_test_pred, prop.chisq = FALSE)
table(df_test_pred == df_test_labels) %>% prop.table()
df_train %>% head()
table(df_test_pred == df_test_labels) %>% prop.table()
pacman::p_load("tidyverse","C50","gmodels")
df <- read.csv("hanwoo2.txt",fileEncoding = "EUC-KR")
df <- filter(df, is.na(windex)==FALSE)
df1 <- df[,c(1:9,14,15,11)]
df1$SexNm <- ifelse(df1$SexNm=="거세",1,0) #dummy coding
df_train <- df1[1:8000,-11]
df_test <- df1[8001:10920,-11]
df_train_labels <- df1[1:8000,11]
df_test_labels <- df1[8001:10920,11]
df_model <- C5.0(df_train[-17], df_train_labels)
summary(df_model)
df_pred <- predict(df_model, df_test)
CrossTable(df_test_labels, df_pred)
table(df_pred == df_test_labels) %>% prop.table()
pacman::p_load("tidyverse","rpart","rpart.plot","RWeka")
df <- read.csv("hanwoo2.txt",fileEncoding = "EUC-KR")
df <- filter(df, is.na(windex)==FALSE)
df1 <- df[,c(1:9,14,15,11)]
df1$SexNm <- ifelse(df1$SexNm=="거세",1,0) #dummy coding
str(df1)
table(df1$gradeNm)
df_train <- df1[1:8000,-11]
df_test <- df1[8001:10920,-11]
df_train_labels <- df1[1:8000,11]
df_test_labels <- df1[8001:10920,11]
lm(육량지수 ~ 도체중 + 근내지방 + month*SexNm, data=df_train) %>% summary()
lm(육량지수 ~ 도체중 + 근내지방 + month*SexNm, data=df_train) %>% summary()
m.rpart <- rpart(육량지수 ~ ., data=df_train)
m.rpart
rpart.plot(m.rpart, digits=2)
p.rpart <- predict(m.rpart, df_test)
rpart.plot(m.rpart, digits=2)
df2 <- df1
colnames(df2) <- c("backfat","rib_area","carcass_weight","windex","marbling","colour","fat_colour","texture","maturity","month","gradeNm","SexNm")
df_train2 <- df2[1:8000,-11]
df_test2 <- df2[8001:10920,-11]
df_train_labels2 <- df2[1:8000,11]
df_test_labels2 <- df2[8001:10920,11]
m.m5p <- M5P(windex ~ ., data=df_train2)
dyn.load('/Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home/lib/server/libjvm.dylib')
m.m5p <- M5P(windex ~ ., data=df_train2)
pacman::p_load("tidyverse","rpart","rpart.plot","RWeka")
m.m5p <- M5P(windex ~ ., data=df_train2)
m.m5p
p.m5p <- predict(m.m5p, df_test2)
cor(p.m5p, df_test$windex)
pacman::p_load("tidyverse","RWeka","neuralnet","kernlab","caret")
df <- read.csv("hanwoo2.txt",fileEncoding = "EUC-KR")
df <- filter(df, is.na(windex)==FALSE)
df1 <- df[,c(1:9,14,15,11)]
df1$SexNm <- ifelse(df1$SexNm=="거세",1,0) #dummy coding
colnames(df1) <- c("backfat","rib_area","carcass_weight","windex","marbling","colour","fat_colour","texture","maturity","month","gradeNm","SexNm")
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
df_norm <- as.data.frame(lapply(df1[,1:10], normalize))
df_norm$SexNm <- df1$SexNm
summary(df_norm$month)
df_train <- df_norm[1:8000,]
df_test <- df_norm[8001:10920,]
df_model2 <- neuralnet(windex ~ backfat + rib_area + carcass_weight + marbling + SexNm, data=df_train, hidden = 3)
plot(df_model2)
df_result <- compute(df_model2, df_test[c("backfat","rib_area","carcass_weight","marbling","SexNm")])
predicted_windex <- df_result$net.result
cor(predicted_windex, df_test$windex)
reg1 <- lm(windex ~ backfat + rib_area + carcass_weight + marbling + SexNm, data=df_train)
summary(reg1)
plot(df_model2)
predicted_windex
grade_classifier <- ksvm(gradeNm ~ windex + backfat + rib_area + carcass_weight + marbling + SexNm, data=df_train, kernel = "vanilladot")
df <- read.csv("hanwoo2.txt",fileEncoding = "EUC-KR")
df <- filter(df, is.na(windex)==FALSE)
df1 <- df[,c(1:9,14,15,11)]
df1$SexNm <- ifelse(df1$SexNm=="거세",1,0) #dummy coding
colnames(df1) <- c("backfat","rib_area","carcass_weight","windex","marbling","colour","fat_colour","texture","maturity","month","gradeNm","SexNm")
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
df_norm <- as.data.frame(lapply(df1[,1:10], normalize))
df_norm$SexNm <- df1$SexNm
df_train <- df_norm[1:8000,]
df_test <- df_norm[8001:10920,]
grade_classifier <- ksvm(gradeNm ~ windex + backfat + rib_area + carcass_weight + marbling + SexNm, data=df_train, kernel = "vanilladot")
View(df_train)
library(ggvis)
df1 %>% ggvis(~month, ~weight)
df1 %>% ggvis(~month, ~carcass_weight)
df1
str(df1)
df3 <- filter(df1, SexNm=="거세")
nrow(df3)
df3 <- filter(df1, SexNm=="1")
df3 %>% ggvis(~month, ~carcass_weight)
df <- readxl::read_excel("methane.xlsx")
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
df_norm <- as.data.frame(lapply(df[,1:10], normalize))
summary(df_norm$DMI)
set.seed(3)
indexTrain <- sample(1:nrow(df),round(nrow(df)*0.7))
df_train <- df_norm[indexTrain,]
df_test <- df_norm[-indexTrain,]
library(neuralnet)
df_model <- neuralnet(CH4d ~ DMI + OMI + CPI + NDFI + DDMI + DOMI + DCPI + DNDFI, data=df_train, hidden = 5)
df_model2 <- neuralnet(CH4d ~ DMI + OMI + CPI + NDFI, data=df_train, hidden = 5)
df_test
df_test <- readxl::read_excel("model1.xlsx")
df_test
head(df_test)
df_test <- readxl::read_excel("model1.xlsx") %>%
[[2:5,]]
df_test <- readxl::read_excel("model1.xlsx") %>%
[2:5,]
df_test <- df_test[2:5,]
df_test
df_test <- readxl::read_excel("model1.xlsx")
df_test <- df_test[,2:5]
df_test
df_test_norm <- as.data.frame(lapply(df_test, normalize))
df_test_norm
df_test_norm$DMI %>% summary
library(dplyr)
df_test_norm$DMI %>% summary
df_test <- readxl::read_excel("model1.xlsx")
df_test <- df_test[,2:5]
df_test <- as.data.frame(lapply(df_test, normalize))
df_test$DMI %>% summary
df_result2 <- compute(df_model2, df_test[,1:4])
df <- readxl::read_excel("methane.xlsx")
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
df_norm <- as.data.frame(lapply(df[,1:10], normalize))
set.seed(3)
indexTrain <- sample(1:nrow(df),round(nrow(df)*0.7))
df_train <- df_norm[indexTrain,]
library(neuralnet)
df_model2 <- neuralnet(CH4d ~ DMI + OMI + CPI + NDFI, data=df_train, hidden = 5)
df_test <- readxl::read_excel("model1.xlsx")
df_test <- df_test[,2:5]
df_test <- as.data.frame(lapply(df_test, normalize))
df_result2 <- compute(df_model2, df_test[,1:4])
df_result2
library(dplyr)
df <- readxl::read_excel("methane.xlsx")
back_normalize <- function(x){
return((max(x)-min(x))/(x-min(x)))
}
max(df$CH4d)
min(df$CH4d)
df_result2
df_test <- readxl::read_excel("model1.xlsx")
result <- cbind(df_test, df_result2)
result
result <- cbind(df_test, df_result2$net.result)
result
mutate(df_result2, back_normalize=min+((max-min)*df_result2$net.result))
mutate(df_result2, back_normalize=min+((max-min)*df_result2$net.result))
result <- as.data.frame(df_test, result=df_result2$net.result)
result
result <- as.data.frame(result=df_result2$net.result)
result
result <- as.data.frame(result=df_result2$net.result)
result <- df_result2$net.result
result
result %>% str()
result <- as.data.frame(result)
result
result <- as.data.frame(result=result)
result <- as.data.frame(result=result)
result <- df_result2$net.result
result <- as.data.frame(result=result)
result <- as.data.frame(result)
head(result)
result <- cbind(df_test, result)
result %>% head
mutate(df_result2, back_normalize=min+((max-min)*V1))
mutate(result, back_normalize=min+((max-min)*V1))
max <- max(df$CH4d)
min <- min(df$CH4d)
mutate(result, back_normalize=min+((max-min)*V1))
mutate(result, result=min+((max-min)*V1))
result1 <- mutate(result, result=min+((max-min)*V1))
colnames(result1) <- c("RunOrder","DMI","OMI","CPI","NDFI","normalizedResult","result")
result1
write.csv(result1, "goat-methane-ML-result.txt", row.names = FALSE)
df
summary(df)
pacman::p_load("tidyverse","rpart","rpart.plot","RWeka")
df <- read.csv("hanwoo2.txt",fileEncoding = "EUC-KR")
View(df)
df <- filter(df, is.na(windex)==FALSE)
df1 <- df[,c(1:9,14,15,11)]
df1$SexNm <- ifelse(df1$SexNm=="거세",1,0) #dummy coding
str(df1)
table(df1$gradeNm)
df_train <- df1[1:8000,-11]
df_test <- df1[8001:10920,-11]
df_train_labels <- df1[1:8000,11]
df_test_labels <- df1[8001:10920,11]
lm(육량지수 ~ 도체중 + 근내지방 + month*SexNm, data=df_train) %>% summary()
m.rpart <- rpart(육량지수 ~ ., data=df_train)
m.rpart
rpart.plot(m.rpart, digits=2)
theme_set(theme_bw(base_family="AppleGothic")) #한글깨짐 문제 해결
rpart.plot(m.rpart, digits=2)
m.rpart
df2 <- df1
colnames(df2) <- c("backfat","rib_area","carcass_weight","windex","marbling","colour","fat_colour","texture","maturity","month","gradeNm","SexNm")
df_train2 <- df2[1:8000,-11]
df_test2 <- df2[8001:10920,-11]
df_train_labels2 <- df2[1:8000,11]
df_test_labels2 <- df2[8001:10920,11]
m.m5p <- M5P(windex ~ ., data=df_train2)
m.m5p
df2 <- df1
colnames(df2) <- c("backfat","rib_area","carcass_weight","windex","marbling","colour","fat_colour","texture","maturity","month","gradeNm","SexNm")
df_train2 <- df2[1:8000,-11]
df_test2 <- df2[8001:10920,-11]
df_train_labels2 <- df2[1:8000,11]
df_test_labels2 <- df2[8001:10920,11]
m.m5p <- M5P(windex ~ ., data=df_train2)
dyn.load('/Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home/lib/server/libjvm.dylib')
m.m5p <- M5P(windex ~ ., data=df_train2)
pacman::p_load("tidyverse","rpart","rpart.plot","RWeka","M5P")
m.m5p <- M5P(windex ~ ., data=df_train2)
m.m5p
